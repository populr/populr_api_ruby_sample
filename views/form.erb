<!doctype html>
<html lang="en"  ng-app="myApp">
<head>
  <meta charset="utf-8">
  <link href="/css/bootstrap.css" rel="stylesheet"/>
  <link href="/css/flat-ui.css" rel="stylesheet"/>
  <link href="/css/app.css" rel="stylesheet"/>
  <script type="text/javascript" src="//api.filepicker.io/v1/filepicker.js"></script>

  <script src="/lib/angular/angular.js"></script>
  <script src="/js/flat-ui/jquery-1.8.2.min.js"></script>
  <script src="/js/flat-ui/jquery.placeholder.js"></script>

  <style>
  html, body {
    background: transparent;
    overflow: hidden;
  }
  .form {
    padding-bottom: 10px;
  }
  .api-region.error > div {
    margin-right: 7px;
    padding: 7px;
    border: 2px solid #e74c3c;
    border-radius: 7px;
  }
  </style>
  <script>

    $(document).ready(function() {
      var counter = 0;
      resize = function() {
        window.parent.postMessage('populate|' + String($('.form').outerHeight()), '*');
      };
      resize();
      var interval_id = setInterval(function() {
        resize();
        if (++counter == 5) clearInterval(interval_id);
      }, 1000);
    });

    // Declare app level module which depends on filters, and services
    angular.module('myApp', ['myApp.directives', 'myApp.controllers']);
    angular.module('myApp.directives', []).
      directive( ['focus', 'blur', 'keyup', 'keydown', 'keypress'].reduce( function ( container, name ) {
        var directiveName = 'ng' + name[ 0 ].toUpperCase( ) + name.substr( 1 );

        container[ directiveName ] = [ '$parse', function ( $parse ) {
            return function ( scope, element, attr ) {
                var fn = $parse( attr[ directiveName ] );
                element.bind( name, function ( event ) {
                    scope.$apply( function ( ) {
                        fn( scope, {
                            $event : event
                        } );
                    } );
                } );
            };
        } ];
        return container;
    },{}));


  angular.module('myApp.controllers', []).
    controller('FormController', ['$scope', '$http', '$timeout', function($scope, $http, $timeout) {

      $scope.pop_data = {slug: '', tags: {}, file_regions: {}, embed_regions: {}};
      $scope.pop_errors = {tags: {}, regions: {}};
      $scope.creating = false;
      $scope.embed = <%= @embed.as_json(:except=>[:api_key, :api_environment, :template_id]).to_json %>;
      $scope.template = <%= @template.to_json %>;





      $scope.class_for_tag_input = function(tag) {
        return ($scope.pop_errors.tags[tag]) ? 'error' : '';
      }

      $scope.class_for_region_input = function(region_key) {
        return ($scope.pop_errors.regions[region_key]) ? 'error' : '';
      }

      $scope.files_selected = function(region_key, files) {
        var urls = []
        for (var i = 0; i < files.length; i++)
          urls.push(files[i].url);
        $scope.pop_data.file_regions[region_key] = urls;
      }

      $scope.sanitize_slug = function() {
        $scope.pop_data['slug'] = $scope.pop_data['slug'].replace(/ /g, '-');
      }

      $scope.creation_description = function() {
        if ($scope.embed.delivery_config.action == 'create')
          return 'Submit Form';
        if ($scope.embed.delivery_config.action == 'publish')
          return 'Publish Your Page!';
        if ($scope.embed.delivery_config.action == 'clone')
          return 'Continue Editing on Populr.me';
        if ($scope.embed.delivery_config.action == 'collaborate')
          return 'Continue Editing on Populr.me';
        return 'Unknown Creation Action';
      }

      $scope.create = function() {
        if (!$scope.check_form_valid(true))
          return;

        $scope.creating = true;
        $http.post('/_/embeds/' + $scope.embed._id + '/build_pop', {pop_data: $scope.pop_data}).success(function(response){
          $scope.creating = false;
          if (response.error)
            return alert(response.error);
          else {
            debugger
            if (/^https:\/\/editor-[a-z0-9]+\.populr\.me/.test(response.redirect_url)) {
              window.open(response.redirect_url, '_blank');
              window.location = window.location.protocol + '//' + window.location.host + '/editor_opened_in_new_tab?url=' + encodeURIComponent(response.redirect_url)
            } else {
              window.location = response.redirect_url;
            }
          }
        }).error(function(err) {
          alert(err);
        });
      }

      $scope.tag_display_name = function(tag) {
        display = tag;
        if ($scope.is_textarea_tag(tag))
          display = tag.split('textarea:')[1];
        return $scope.html_for_text(display);
      }

      $scope.is_textarea_tag = function(tag) {
        return tag.toLowerCase().indexOf('textarea:') == 0
      }

      $scope.html_for_text = function(text) {
        // http://, https://, ftp://
        var urlPattern = /\b(?:https?|ftp):\/\/[a-z0-9-+&@#\/%?=~_|!:,.;]*[a-z0-9-+&@#\/%=~_|]/gim;
        // www. sans http:// or https://
        var pseudoUrlPattern = /(^|[^\/])(www\.[\S]+(\b|$))/gim;
        // Email addresses
        var emailAddressPattern = /\w+@[a-zA-Z_]+?(?:\.[a-zA-Z]{2,6})+/gim;

        return text
            .replace(urlPattern, '<a href="$&">$&</a>')
            .replace(pseudoUrlPattern, '$1<a href="http://$2">$2</a>')
            .replace(emailAddressPattern, '<a href="mailto:$&">$&</a>');
      }

      $scope.check_form_valid = function(alert_errors) {
        var error = null;

        for (var i = 0; i < $scope.template.api_tags.length; i++) {
          var tag = $scope.template.api_tags[i];
          var unfilled = (!$scope.pop_data.tags[tag] || $scope.pop_data.tags[tag].length == 0)
          $scope.pop_errors.tags[tag] = unfilled
          error = (unfilled ? "Please fill in the '" + tag + "' field." : false) || error
        }

        var region_keys = Object.keys($scope.template.api_regions);
        for (var i = 0; i < region_keys.length; i++) {
          var key = region_keys[i];
          var attributes = $scope.template.api_regions[key];

          if (attributes['type'] == 'embed') {
            var unfilled = (!$scope.pop_data.embed_regions[key] || $scope.pop_data.embed_regions[key].length == 0)
            $scope.pop_errors.regions[key] = unfilled
          } else {
            var unfilled = (!$scope.pop_data.file_regions[key] || $scope.pop_data.file_regions[key].length == 0)
            $scope.pop_errors.regions[key] = unfilled
          }
          error = (unfilled ? "Please provide one or more files for the '" + key + "' field.": false) || error
        }

        if (!$scope.$$phase)
          $scope.$apply()

        if (error && alert_errors)
          alert(error);

        return !error;
      }

    }]);

  </script>

</head>
<body>
  <div class="form" ng-controller="FormController">

    <% if @embed.delivery_config['delivery_action'] == 'publish' %>
      <div class="control-group" style="padding-right:20px;">
        <h4>Slug</h4>
        <input type="text" value="" style="width:100%;" ng-model="pop_data['slug']" ng-blur="sanitize_slug()"/>
      </div>
    <% end %>

    <div ng-repeat="tag in template.api_tags" style="padding-right:20px;" class="control-group {{class_for_tag_input(tag)}}">
      <h4 ng-bind-html-unsafe="tag_display_name(tag)"></h4>
      <textarea ng-show="is_textarea_tag(tag)" style="width:100%; height:70px;" ng-model="pop_data.tags[tag]"></textarea>

      <input ng-show="!is_textarea_tag(tag)" type="text" value="" style="width:100%;" placeholder="Your {{tag}}" ng-model="pop_data.tags[tag]" ng-blur="check_form_valid(false)"/>
    </div>

    <div ng-repeat="(key,attributes) in template.api_regions" class="control-group api-region {{class_for_region_input(key)}}">
      <h4 ng-bind-html-unsafe="html_for_text(key)"></h4>
      <div ng-switch="attributes['type']">
        <div ng-switch-when="embed" style="padding-right:15px;">
          <textarea style="width:100%; height:70px;" ng-model="pop_data.embed_regions[key]"></textarea>
        </div>
        <div ng-switch-default>
          Select one or more {{attributes['type']}}s below.
          <input type="filepicker-dragdrop" data-fp-apikey="<%= ENV['FILEPICKER_API_KEY'] %>" data-fp-mimetypes="*/*" data-fp-container="modal" data-fp-multiple="true" onchange="angular.element(this).scope().files_selected('{{key}}', event.fpfiles)">
        </div>
      </div>
    </div>

    <hr style="clear:both;"></hr>

    <div ng-show="embed.delivery_config.send_to_user">
      <h4>Email Address</h4>
        <p>A link to your new web page will be emailed to the address you provide.<span ng-show="embed.delivery_config.password && !embed.delivery_config.password_sms"> The email contains a password needed to view the page</span>.</p>

      <div style="padding-right:15px;">
        <input type="text" value="" style="width:100%;" ng-model="pop_data['populate_recipient_email']"/>
      </div>
      <hr></hr>
    </div>

    <div ng-show="embed.delivery_config.password_sms">
      <h4>Phone Number</h4>
      <p>For security purposes, your page will be protected by two-factor authentication. A password for viewing the page will be sent via SMS while the link to the page is delivered via email. Please provide your 10-digit cell phone number below.</p>
      <div style="padding-right:15px;">
        <input type="text" value="" style="width:250px;" ng-model="pop_data['populate_recipient_phone']"/>
      </div>
      <hr></hr>
    </div>

    <div>
      <a ng-hide="creating" class="btn btn-primary btn-large btn-block" ng-click="create()">{{creation_description()}}</a>
      <a ng-show="creating" class="btn btn-primary btn-large btn-block" ng-click="create()">Working...</a>
    </div>

</body>
</html>


